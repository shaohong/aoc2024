# generated by chatgpt
from collections import deque

# Read input file and parse the topographic map
with open("input.txt") as f:
    topographic_map = [list(map(int, line.strip())) for line in f.readlines()]

rows, cols = len(topographic_map), len(topographic_map[0])
directions = [(0, 1), (1, 0), (0, -1), (-1, 0)]

def bfs(trailhead):
    """Performs BFS to count reachable '9' positions from a given trailhead."""
    queue = deque([trailhead])
    visited = set([trailhead])
    score = 0

    while queue:
        x, y = queue.popleft()
        if topographic_map[x][y] == 9:
            score += 1

        for dx, dy in directions:
            nx, ny = x + dx, y + dy
            if 0 <= nx < rows and 0 <= ny < cols and (nx, ny) not in visited:
                if topographic_map[nx][ny] == topographic_map[x][y] + 1:
                    visited.add((nx, ny))
                    queue.append((nx, ny))
    return score

# Identify trailheads and calculate their scores
total_score = 0
for i in range(rows):
    for j in range(cols):
        if topographic_map[i][j] == 0:  # Found a trailhead
            total_score += bfs((i, j))

print(total_score)
